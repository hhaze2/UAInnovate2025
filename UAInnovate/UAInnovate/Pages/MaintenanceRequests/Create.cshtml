@page
@model UAInnovate.Pages.MaintenanceRequests.CreateModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager
@using UAInnovate.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext _context

@{
    ViewData["Title"] = "Create";
}

@{
    var isAdmin = false;
    var isUser = false;
    if (User.Identity.IsAuthenticated)
    {
        var user = await UserManager.GetUserAsync(User);
        var username = user.Email;
        var userModel = await _context.UserModels.FirstAsync(u => u.Username == username);
        if (userModel.permissons.Contains("Admin"))
        {
            isAdmin = true;
        }
        if (userModel.permissons.Contains("User"))
        {
            isUser = true;
        }
    }
    //var isAdmin = user != null && await UserManager.IsInRoleAsync(user, "Admin");
}

<h1>Create</h1>

<h4>MaintenanceRequests</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @* <div class="form-group"> *@
            @*     <span class="text-danger">*</span> *@
            @*     <label asp-for="MaintenanceRequests.Date" class="control-label"></label> *@
            @*     <input asp-for="MaintenanceRequests.Date" class="form-control" /> *@
            @*     <span asp-validation-for="MaintenanceRequests.Date" class="text-danger"></span> *@
            @* </div> *@
            <div class="form-group">
                <span class="text-danger">*</span>
                <label asp-for="MaintenanceRequests.Issue" class="control-label"></label>
                <input asp-for="MaintenanceRequests.Issue" class="form-control" />
                <span asp-validation-for="MaintenanceRequests.Issue" class="text-danger"></span>
            </div>
            <div class="form-group">
                <span class="text-danger">*</span>
                <label asp-for="MaintenanceRequests.IssueLocation" class="control-label"></label>
                <input asp-for="MaintenanceRequests.IssueLocation" class="form-control" />
                <span asp-validation-for="MaintenanceRequests.IssueLocation" class="text-danger"></span>
            </div>
            <div class="form-group">
                <span class="text-danger">*</span>
                <label asp-for="MaintenanceRequests.Summary" class="control-label"></label>
                <input asp-for="MaintenanceRequests.Summary" class="form-control" />
                <span asp-validation-for="MaintenanceRequests.Summary" class="text-danger"></span>
            </div>
            <div class="form-group">
                <span class="text-danger">*</span>
                <label asp-for="MaintenanceRequests.Priority" class="control-label"></label>
                <select asp-for="MaintenanceRequests.Priority" class="form-control">
                    <option value="">-- Select Role --</option>
                    @foreach (var role in Enum.GetValues(typeof(UAInnovate.Models.PriorityTypes)))
                    {
                        <option value="@role">@role</option>
                    }

                </select>
                <span asp-validation-for="MaintenanceRequests.Priority" class="text-danger"></span>
            </div>
            @* <div class="form-group"> *@
            @*     <span class="text-danger">*</span> *@
            @*     <label asp-for="MaintenanceRequests.Status" class="control-label"></label> *@
            @*     <select asp-for="MaintenanceRequests.Status" class="form-control"></select> *@
            @*     <span asp-validation-for="MaintenanceRequests.Status" class="text-danger"></span> *@
            @* </div> *@
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @if (isAdmin)
    {
        <a asp-page="Index">Back to List</a>
    }
    else
    {
        <a asp-area="" asp-page="/WorkerHome">Back to List</a>
    }
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
