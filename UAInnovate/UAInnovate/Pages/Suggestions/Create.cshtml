@page
@model UAInnovate.Pages.Suggestions.CreateModel
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager
@using UAInnovate.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext _context

@{
    ViewData["Title"] = "Create";
}

@{
        var isAdmin = false;
        var isUser = false;
        if (User.Identity.IsAuthenticated)
        {
            var user = await UserManager.GetUserAsync(User);
            var username = user.Email;
            var userModel = await _context.UserModels.FirstAsync(u => u.Username == username);
            if (userModel.permissons.Contains("Admin"))
            {
                isAdmin = true;
            }
            if (userModel.permissons.Contains("User"))
            {
                isUser = true;
            }
        }
    }

<h1>Create</h1>

<h4>Suggestions</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @* <div class="form-group"> *@
            @*     <span class="text-danger">*</span> *@
            @*     <label asp-for="Suggestions.Date" class="control-label"></label> *@
            @*     <input asp-for="Suggestions.Date" class="form-control" /> *@
            @*     <span asp-validation-for="Suggestions.Date" class="text-danger"></span> *@
            @* </div> *@
            <div class="form-group">
                <span class="text-danger">*</span>
                <label asp-for="Suggestions.SuggestionText" class="control-label"></label>
                <textarea asp-for="Suggestions.SuggestionText" class="form-control" rows="5" cols="50"></textarea>
                <span asp-validation-for="Suggestions.SuggestionText" class="text-danger"></span>
            </div>
            <div class="form-group">
                <span class="text-danger">*</span>
                <label asp-for="Suggestions.Priority" class="control-label"></label>
                <select asp-for="Suggestions.Priority" class="form-control">
                    @foreach (var role in Enum.GetValues(typeof(UAInnovate.Models.PriorityTypes)))
                    {
                        <option value="@role">@role</option>
                    }
                </select>
                <span asp-validation-for="Suggestions.Priority" class="text-danger"></span>
            </div>
            @* <div class="form-group"> *@
            @*     <span class="text-danger">*</span> *@
            @*     <label asp-for="Suggestions.Status" class="control-label"></label> *@
            @*     <select asp-for="Suggestions.Status" class="form-control"></select> *@
            @*     <span asp-validation-for="Suggestions.Status" class="text-danger"></span> *@
            @* </div> *@
            <div class="form-check">
                <input asp-for="IsAnonymous" class="form-check-input" type="checkbox" id="anonymousCheck" />
                <label class="form-check-label" for="anonymousCheck">
                    Submit Form Anonymously
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @if (isAdmin)
    {
        <a asp-page="Index">Back to List</a>
    }
    else
    {
        <a asp-area="" asp-page="/WorkerHome">Back to List</a>
    }
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
