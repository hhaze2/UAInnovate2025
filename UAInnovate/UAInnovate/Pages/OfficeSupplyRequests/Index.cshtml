@page
@model UAInnovate.Pages.OfficeSupplyRequests.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.OfficeSupplyRequests[0].Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OfficeSupplyRequests[0].ItemName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OfficeSupplyRequests[0].Priority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OfficeSupplyRequests[0].CurrStock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OfficeSupplyRequests[0].AdditionalInfo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OfficeSupplyRequests[0].Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OfficeSupplyRequests[0].Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OfficeSupplyRequests[0].OfficeLocation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.OfficeSupplyRequests[0].Username)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.OfficeSupplyRequests)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ItemName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Priority)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CurrStock)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AdditionalInfo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OfficeLocation)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Username)
                </td>
                <td>
                    <form method="post">
                        <input type="hidden" name="id" value="@item.Id" />
                        <button type="submit" asp-page-handler="Reject" class="btn btn-primary">
                            Reject
                        </button>
                    </form>
                    <form method="post">
                        <input type="hidden" name="id" value="@item.Id" />
                        <button type="submit" asp-page-handler="Complete" class="btn btn-primary">
                            Completed
                        </button>
                    </form>

                </td>
            </tr>
        }
    </tbody>
</table>
